#!/bin/bash
# Compile scrip for dynlib

# Obs: The order of the files in $files has to reflect the interdepencies!
cur=`pwd`
src="$cur/src"
precc="$src/precc"
work="$cur/default"

files="config.f95 conv.f95 derivatives.f95 humidity.f95 diag_contour_rwb.f95 diag_fronts.f95 diag.f95 stat.f95 utils.f95"
filec="const.f95"
filek="kind.f95"
filem=".dynlib_workdir_prepared"

pysig="${precc}/dynlib.pyf"

LIBS='-llapack'

# Empty precompiler directory
mkdir -p $precc
rm -rf ${precc}/*


# 1. Simple sed precompiler
echo "Stage 1: Precompiling the Fortran code"

cd $src

# Marker one of the source files have been changes since last commit
[[ `git diff $files $filec $filek |  wc -l` > 0 ]] && { change=+; } || { change=; };
VERSION=`git describe --tags --abbrev=0`
VERREVI=`git describe --tags`$change
VERDATE=`git log --format="%ai" --no-walk $VERSION`

sed -e "s/####VERREVI####/$VERREVI/g" $filec |
sed -e "s/####VERDATE####/$VERDATE/g" | 
sed -e "s/####FCOMPIL####/f2py version `f2py -v`/g" | 
sed -e "s/####FCOMTIM####/`date +'%Y-%m-%d %H:%M:%S %z'`/g" |
sed -e "s/####FCOMHOS####/`hostname -f`/g" > $precc/$filec
cp $filek $files $precc


# 2. Creating new python signature file
echo "Stage 2: Creating python signature file"

cd $precc

f2py -m dynlib -h $pysig $filec $files > /dev/null
sed "s/kind=nr/kind=8/g" $pysig | sed "s/_nr//g" |
sed "s/kind=ni/kind=4/g" | sed "s/_ni//g" > ${pysig}_tmp
mv ${pysig}_tmp $pysig


# 3. Compiling the fortran modules 
echo "Stage 3: Creating Fortran *.mod files"
gfortran $LIBS -c $filek $filec $files 


# 4. Compiling the shared object usable from within python
echo "Stage 4: Compiling the python module (as a shared object)"
DEBUG='--debug --opt="-fcheck=all -ffpe-trap=invalid,zero,overflow -fbacktrace -g -pedantic"'
f2py -c $LIBS --fcompiler=gnu95 dynlib.pyf $files $filec $filek > /dev/null
mv dynlib.so $cur
cd $cur/..


if [ -f $filem ];
then
	echo "Stage 5: skipped [`pwd` already prepared]"
elif [ $1 == '--no-prepare' ];
then
	echo "Stage 5: skipped by instruction"
else
	echo "Stage 5: Preparing the work directory [`pwd`]"
	cp -a $cur/default/example*.py .
	cp -a $cur/default/settings.py .
	touch $filem
fi


echo "Done compiling dynlib version $VERREVI"

#
