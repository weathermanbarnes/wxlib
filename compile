#!/bin/bash
# Compile scrip for dynlib

# Obs: The order of the files in $files has to reflect the interdepencies!
base=`pwd`
baselib="$base/lib"
src="$baselib/fortran"
precc="$src/.precc"
work="$base/examples"

doc="$base/doc"
doc_extract=".compile_fortran_doc.py"

files="config.f90 derivatives.f90 ellipse.f90 utils.f90 humidity.f90 diag.f90 detect_rwb_contour.f90 detect_fronts.f90 detect.f90 stat.f90"
filec="const.f90"
filek="kind.f90"

python_library="dynfor"
fortran_library="libdynfor"
pysig="${precc}/$python_library.pyf"

LIBS='-llapack'

# Empty precompiler directory
mkdir -p $precc
rm -rf ${precc}/*

# Anticipate compiled object file names
fileso=""
for file in $files
	do fileso="$fileso ${file%.*}.o"
done
fileco="${filec%.*}.o"
fileko="${filek%.*}.o"


# 1. Simple sed precompiler
echo "Stage 1: Precompiling the Fortran code"

cd $src

# Marker one of the source files have been changes since last commit
[[ `git diff $files $filec $filek |  wc -l` > 0 ]] && { change=+; } || { change=; };
VERSION=`git describe --tags --abbrev=0`
VERREVI=`git describe --tags`$change
VERDATE=`git log --format="%ai" --no-walk $VERSION`

sed -e "s/####VERREVI####/$VERREVI/g" $filec |
sed -e "s/####VERDATE####/$VERDATE/g" | 
sed -e "s/####FCOMPIL####/f2py version `f2py -v`/g" | 
sed -e "s/####FCOMTIM####/`date +'%Y-%m-%d %H:%M:%S %z'`/g" |
sed -e "s/####FCOMHOS####/`hostname -f`/g" > $precc/$filec
cp $filek $files $precc


# 2. Creating new python signature file
echo "Stage 2: Creating python signature file"

cd $precc

f2py -m $python_library -h $pysig $filec $files > /dev/null
sed "s/kind=nr/kind=8/g" $pysig | sed "s/_nr//g" |
sed "s/kind=ni/kind=4/g" | sed "s/_ni//g" > ${pysig}_tmp
mv ${pysig}_tmp $pysig


# 3. Compiling the fortran modules 
echo "Stage 3: Compiling Fortran shared object"
gfortran $LIBS -fPIC -c $filek $filec $files 
gfortran -shared $fileko $fileco $fileso $LIBS -o $fortran_library.so 
mv $fortran_library.so $baselib


# 4. Compiling the shared object usable from within python
echo "Stage 4: Compiling the python module"
DEBUG=' --debug-capi --debug --opt="-fcheck=all -ffpe-trap=invalid,zero,overflow -fbacktrace -g -pedantic"'
f2py -c $LIBS --fcompiler=gnu95 $pysig $files $filec $filek > /dev/null
mv $python_library.so $baselib


# 5. Compiling Fortran documentation
echo "Stage 5: Compiling the pickled Fortran documentation"
cd $src
python $baselib/$doc_extract $filek $filec $files


# 6. Compiling Fortran documentation
echo "Stage 6: Generating the common documentation"
cd $doc
make clean &> /dev/null
PYTHONPATH="$doc:$PYTHONPATH" make html &> /dev/null



echo "Done compiling dynlib version $VERREVI"

#
